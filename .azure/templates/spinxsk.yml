# This template runs spinxsk.exe for single architecture.

parameters:
  arch: 'x64'
  config: 'Debug'

jobs:
- job: spinxsk_${{ parameters.arch }}_${{ parameters.config }}
  displayName: spinxsk (${{ parameters.arch }}_${{ parameters.config }})
  pool: MsQuic
  variables:
  - name: runCodesignValidationInjection
    value: false
  workspace:
    clean: all
  steps:
  - checkout: self

  - task: DownloadBuildArtifacts@0
    displayName: Download Artifacts
    inputs:
      artifactName: artifacts
      itemPattern: artifacts/bin/${{ parameters.arch }}_${{ parameters.config }}/**
      downloadPath: $(Build.SourcesDirectory)

  - task: PowerShell@2
    displayName: Sign and Package
    inputs:
      pwsh: true
      filePath: .azure/scripts/sign.ps1
      arguments: -Config ${{ parameters.config }} -Arch ${{ parameters.arch }}

  - task: PowerShell@2
    displayName: Start Logging
    inputs:
      pwsh: true
      filePath: .azure/scripts/log.ps1
      arguments: -Start -Name spinxsk -Debug -Config ${{ parameters.config }} -Arch ${{ parameters.arch }}

  - task: PowerShell@2
    displayName: Install xdpmp
    inputs:
      pwsh: true
      filePath: .azure/scripts/setup.ps1
      arguments: -Install xdpmp -Debug -Config ${{ parameters.config }} -Arch ${{ parameters.arch }}

  - task: PowerShell@2
    displayName: Run spinxsk
    timeoutInMinutes: 15
    inputs:
      pwsh: true
      filePath: .azure/scripts/spinxsk.ps1
      arguments: -Config ${{ parameters.config }} -Arch ${{ parameters.arch }} -QueueCount 2 -Minutes 10 -Debug -Stats

  - task: PowerShell@2
    displayName: Uninstall xdp components
    condition: always()
    name: uninstall
    inputs:
      pwsh: true
      filePath: .azure/scripts/setup.ps1
      arguments: -Uninstall -Debug -Config ${{ parameters.config }} -Arch ${{ parameters.arch }}

  - task: PowerShell@2
    displayName: Stop Logging
    condition: always()
    inputs:
      pwsh: true
      filePath: .azure/scripts/log.ps1
      arguments: -Stop -Name spinxsk -Debug -Config ${{ parameters.config }} -Arch ${{ parameters.arch }}

  - task: CopyFiles@2
    displayName: Stage Logs
    condition: succeededOrFailed()
    inputs:
      sourceFolder: artifacts/logs
      contents: '**/!(*.ilk|*.exp|*.lastcodeanalysissucceeded)'
      targetFolder: $(Build.ArtifactStagingDirectory)/logs/${{ parameters.arch }}_${{ parameters.config }}

  - task: PublishBuildArtifacts@1
    displayName: Upload Logs
    condition: succeededOrFailed()
    inputs:
      artifactName: artifacts
      pathToPublish: $(Build.ArtifactStagingDirectory)
      parallel: true

  - task: PowerShell@2
    displayName: Reboot (if necessary)
    condition: and(always(), eq(variables['NeedsReboot'],'true'))
    inputs:
      pwsh: true
      targetType: inline
      script: shutdown.exe /f /r /t 0 /c 'XDP Pipeline' /d u:4:5
